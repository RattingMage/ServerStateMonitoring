version: '3.8'

services:
  web:
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      migrate:
        condition: service_completed_successfully

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10

  migrate:
    build: .
    command: >
      bash -c "./waiting-db.sh &&
      python manage.py migrate &&
      python create_superuser.py"
    environment:
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  celery:
    build: .
    command: celery -A ServerStateMonitoring worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - web

  celery-beat:
    build: .
    command: celery -A ServerStateMonitoring beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - web